/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.basic.server
import org.basic.server.enums.*

/**
Asset for chaincode
 */

asset HealthRecord identified by healthRecordId {
  o String healthRecordId 
  o String hight optional
  o String tuoithai optional
  o String hatthu0 optional
  o String hattruong0 optional
  o String tieucau0 optional
  o String tq0 optional
  o String aptt0 optional
  o String fibrinogen0 optional
  o String ast0 optional
  o String alt0 optional
  o String creatinin0 optional
  o String ure0 optional
  o String auric0 optional
  o String ldh0 optional
  o String damnieu0 optional
  o String damnieu24h0 optional
  o String protein0 optional
  o String albumin0 optional
  o String bilirubintp0 optional
  o String bilirubintt0 optional
  o String conclusion optional
  --> Doctor [] authorizedDoctors
  --> Patient owner
  }
/**
 * An abstract participant type in this business network
 */
abstract participant  Person identified by identityCardNumber {
  o String personId
  o String name
  o String address
  o String email
  o String phone
  o String identityCardNumber
  o Gender sex
  o DateTime birthday optional
  o DateTime createAt optional
  o DateTime updateAt optional
 }


participant Doctor extends Person {

}

participant Patient extends Person{

}

asset Request identified by requestId {
  o String requestId
  o Role requesterRole
  o Role resourceOwnerRole
  o ResourceType resourceType
  o RequestStatus status
  o String resourceId

  --> Person owner
  --> Person resourceOwner
}

/**
Asset of Doctor
 */

asset DoctorInfo identified by doctorInfoId {
  o String doctorInfoId
  o String doctorId
  o String name
  o String address
  o String email
  o String phone
  o String identityCardNumber
  o String sex
  o DateTime birthday optional
  o Specialist specialist
  o MarriageStatus marriageStatus
  o String tittle optional
  o DateTime createAt optional
  o DateTime updateAt optional
  --> Doctor[] authorizedDoctors
  --> Patient[] authorizedPatients
  --> Doctor owner
}

asset DoctorProfile identified by doctorProfileId{
  o String doctorProfileId
  o String doctorId
  o Role role
  o String avatar default="default"
  o DateTime createAt optional
  o DateTime updateAt optional
  --> Doctor owner
}


/**
Asset of patient
 */
 asset PatientInfo identified by patientInfoId {
  o String patientInfoId
  o String patientId
  o String name
  o String address
  o String email
  o String phone
  o String identityCardNumber
  o String sex
  o DateTime birthday optional
  o String career
  o MarriageStatus marriageStatus
  o DateTime createAt optional
  o DateTime updateAt optional
  
  --> Doctor[] authorizedDoctors
  --> Patient owner
}

asset PatientProfile identified by patientProfileId{
  o String patientProfileId
  o String patientId
  o Role role
  o String avatar default="default"
  o DateTime createAt optional
  o DateTime updateAt optional
  --> Patient owner
}